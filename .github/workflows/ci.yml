- name: Create and upload release assets
  run: |
    mkdir -p release-assets
    for target in x86_64-unknown-linux-gnu x86_64-pc-windows-msvc x86_64-apple-darwin; do
      case $target in
        x86_64-unknown-linux-gnu)
          artifact_name="uhdr2avif"
          asset_name="uhdr2avif-linux-x86_64"
          ;;
        x86_64-pc-windows-msvc)
          artifact_name="uhdr2avif.exe"
          asset_name="uhdr2avif-windows-x86_64.exe"
          ;;
        x86_64-apple-darwin)
          artifact_name="uhdr2avif"
          asset_name="uhdr2avif-macos-x86_64"
          ;;
      esac
      if [ -f "target/$target/release/$artifact_name" ]; then
        cp "target/$target/release/$artifact_name" "release-assets/$asset_name"
      fi
    done
    ls -la release-assets/

- name: Upload release assets
  uses: softprops/action-gh-release@v1
  with:
    files: release-assets/*
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}name: CI/CD

on:
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: uhdr2avif
            asset_name: uhdr2avif-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: uhdr2avif.exe
            asset_name: uhdr2avif-windows-x86_64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: uhdr2avif
            asset_name: uhdr2avif-macos-x86_64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Build CLI tool
      run: cargo build --release --bin uhdr2avif --target ${{ matrix.target }}
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
